[theme]
theme = "nord-dark"

[icons]
icons = "none"

# --- BLOCKS ---

[[block]]
block = "custom"
command = '''
# Check Spotify via playerctl
song=$(playerctl --player=spotify metadata --format "{{ artist }} - {{ title }}" 2>/dev/null)
if [ -n "$song" ] && [ "$song" != " - " ]; then
    # Truncate if too long
    if [ ${#song} -gt 50 ]; then
        song=$(echo "$song" | cut -c1-47)...
    fi
    printf "\uf001 $song"
else
    # Check any other player
    song=$(playerctl metadata --format "{{ artist }} - {{ title }}" 2>/dev/null)
    if [ -n "$song" ] && [ "$song" != " - " ]; then
        if [ ${#song} -gt 50 ]; then
            song=$(echo "$song" | cut -c1-47)...
        fi
        printf "\uf001 $song"
    fi
fi
'''
shell = "bash"
interval = 3

[[block.click]]
button = "left"
cmd = "playerctl play-pause"

[[block]]
block    = "custom"
command  = '''
if systemctl --user is-active gammastep.service >/dev/null; then
  temp=$(gammastep -p 2>/dev/null | awk '/Color temperature:/ {print int($3)}' | head -1)
  if [ -n "$temp" ]; then
    printf "\ue30d ${temp} K"
  else
    printf "\ue30d K"
  fi
else
  printf "\ue30d Paused"
fi
'''
shell    = "bash"
interval = 5

[[block.click]]
button = "left"
cmd    = "gammastep-pause"

[[block]]
block = "custom"
command = '''
if systemctl is-active --quiet wg-quick-mullvad; then
  printf "\ued25 VPN-On"
else
  printf "\ued25 VPN-Off"
fi
'''
shell = "bash"
interval = 5

[[block.click]]
button = "left"
cmd = "mullvad-toggle"

[[block]]
block = "custom"
# More robust command using nmcli to get Wi-Fi SSID
command = '''
# Check for active ethernet connection first
ethernet_device=$(nmcli -t -f device,type,state dev | grep 'ethernet:connected' | head -1 | cut -d: -f1)
if [ -n "$ethernet_device" ]; then
    printf "\uef44 Ethernet"
else
    # Check for WiFi connection
    ssid=$(nmcli -t -f active,ssid dev wifi | grep '^yes' | cut -d: -f2)
    if [ -n "$ssid" ]; then
        printf "\uf1eb $ssid"
    else
        printf "\uf1eb Connect"
    fi
fi
'''
shell = "bash"
interval = 5

[[block.click]]
button = "left"
cmd = "nm-connection-editor"

[[block]]
block = "custom"
# Corrected command to show connected device or "Off"
command = '''
connected_device=$(bluetoothctl devices Connected | head -n1 | cut -d ' ' -f 3-)
if [ -n "$connected_device" ]; then
    printf "\uf294 $connected_device"
else
    printf "\uf294 Off"
fi
'''
shell = "bash"
interval = 5

[[block.click]]
button = "left"
cmd = "overskride"

[[block]]
block = "custom"
command = '''printf "\uf0a0 $(df -h / | awk 'END{print $4}')"'''
shell = "bash"
interval = 60

[[block]]
block = "custom"
# Simplified memory command
command = '''
mem_percent=$(free -m | awk '/Mem:/ {print int($3/$2*100)}')
printf "\uefc5 %s%%" "$mem_percent"
'''
shell = "bash"
interval = 5

[[block]]
block = "custom"
command = '''
cpu_percent=$(vmstat 1 2 | tail -1 | awk '{print 100-$15}')
printf "\uf4bc %s%%" "$cpu_percent"
'''
shell = "bash"
interval = 1

[[block]]
block = "custom"
# Simplified command to get the volume percentage
command = '''
volume=$(pactl get-sink-volume @DEFAULT_SINK@ | awk '{print $5}' | tr -d '%')
if [ -n "$volume" ]; then
    printf "\uf028 %s%%" "$volume"
else
    printf "\uf028 --%%"
fi
'''
shell = "bash"
interval = 1

[[block.click]]
button = "left"
cmd = "pavucontrol"

[[block]]
block = "custom"
command = '''
capacity=$(cat /sys/class/power_supply/BAT0/capacity)
status=$(cat /sys/class/power_supply/BAT0/status)
if [ "$status" = "Charging" ]; then
    printf "\uf1e6 %s%%" "$capacity"
else
    if [ "$capacity" -ge 90 ]; then
        icon="\uf240"
    elif [ "$capacity" -ge 70 ]; then
        icon="\uf241"
    elif [ "$capacity" -ge 50 ]; then
        icon="\uf242"
    elif [ "$capacity" -ge 25 ]; then
        icon="\uf243"
    else
        icon="\uf244"
    fi
    printf "%s %s%%" "$icon" "$capacity"
fi
'''
shell = "bash"
interval = 2

[[block]]
block = "custom"
command = "date +'%Y-%m-%d %H:%M:%S'"
interval = 1
